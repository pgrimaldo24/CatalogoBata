@{
    ViewBag.Title = "Consulta de Promotor por lider";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
        vertical-align: middle;
    }

    .alignCenter {
        text-align: center;
        vertical-align: middle;
    }

    .table .ColC1 {
        font-weight: bold;
        vertical-align: middle;
    }
</style>
<p class="text-primary">Consulte entre un rango de fechas, todas las ventas realizadas.</p>
<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-sm-4">

        </div>
        <div class="col-md-2" style="padding-right: 0px;">
            <label for="" style="color: #3d566e;">Lider</label>
            <div class="form-group">
                @Html.DropDownList("ddlCliente", new SelectList(ViewBag.ListarCLiente, "Codigo", "Descripcion"), new { @class = "form-control selectpicker", @data_live_search = "true", @id = "ddlCliente", @name = "ddlCliente", @style = "max-width: 100%" })
            </div>
        </div>
        <div class="col-md-6" style="padding-left: 0px;">
            <div class="col-md-5" style="padding-right: 0px;">
                <div>
                    <label for="lblFechaInicio" style="color: #3d566e;">Fecha de Inicio</label>
                    <div id="datepickerIni" class="input-group date" data-date-format="dd/mm/yyyy">
                        <input id="dtpFechaInicio" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                        <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                            <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <label for="lblFechaFin" style="color: #3d566e;">Fecha de Cierre</label>
                <div id="datepickerFin" class="input-group date" data-date-format="dd/mm/yyyy">
                    <input id="dtpFechaFin" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                    <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                        <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                    </span>
                </div>
            </div>
            <div class="col-md-2 text-right" style="padding:0px">
                <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary" style="margin-top: 19px;">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">
        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Actualizar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="TbTabla" class="table table-hover table-bordered compact">
                    <thead>
                        <tr>
                            <th style="text-align: center;">Asesor</th>
                            <th style="text-align: center;">Directora</th>
                            <th style="text-align: center;">Promotor</th>
                            <th style="text-align: center;">Documento</th>                            
                            <th style="text-align: center;">Fec. Nacimiento</th>
                            <th style="text-align: center;">Departamento</th>
                            <th style="text-align: center;">Provincia</th>
                            <th style="text-align: center;">Distrito</th>
                            <th style="text-align: center;">Direccion</th>
                            <th style="text-align: center;">Telefono</th>
                            <th style="text-align: center;">Correo</th>
                            @*<th style="text-align: center;">Celular</th>*@
                            <th style="text-align: center;">Fec. Ing</th>
                            <th style="text-align: center;">Fec. Activacion</th>
                            <th style="text-align: center;">Avtivo</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan='10'>No se encontraron resultados</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        debugger
        var objPromotorLider = {
            Inicio: function () {
                debugger
                /*[Inicializamos variables]*/

                $("#datepickerIni").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                $("#datepickerFin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                this.isOkUpdate = true;
                this.IdCliente = $("#ddlCliente").val();
                this.FechaInicio = $("#dtpFechaInicio").val();
                this.FechaFin = $("#dtpFechaFin").val();
                this.Tabla = $('#TbTabla');

                objPromotorLider.grid.get();
                /*[/Inicializamos variables]*/

                /*[btn Exportar y buscar]*/
                $("#btnExportar").click(function () {
                    objPromotorLider.FechaInicio = $("#dtpFechaInicio").val();
                    objPromotorLider.FechaFin = $("#dtpFechaFin").val();
                    waitingDialog.show("Espere por favor...")
                    objPromotorLider.generaal.exportar();
                })
                $("#btnBuscar").click(function () {
                    objPromotorLider.isOkUpdate = true;
                    objPromotorLider.FechaInicio = $("#dtpFechaInicio").val();
                    objPromotorLider.FechaFin = $("#dtpFechaFin").val();
                    objPromotorLider.IdCliente = $("#ddlCliente").val();
                    objPromotorLider.generaal.consultar();
                })
                /*[btn Exportar y buscar]*/
            },
            grid: {
                get: function () {
                    debugger
                    objPromotorLider.Tabla.DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        //"fnServerData": function (sSource, aoData, fnCallback) {
                        //},
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getLisPromotorXLiderAjax", "RRHH")',
                        "fnServerParams": function (aoData) {
                            debugger;
                            aoData.push({ "name": "isOkUpdate", "value": objPromotorLider.isOkUpdate });
                            aoData.push({ "name": "FechaInicio", "value": objPromotorLider.FechaInicio });
                            aoData.push({ "name": "FechaFin", "value": objPromotorLider.FechaFin });
                            aoData.push({ "name": "IdCliente", "value": objPromotorLider.IdCliente });
                        },
                        "bFilter": true,
                        "bdestroy": true,
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [],
                        }],
                        "bDeferRender": true,
                        "aoColumns": [
                            { "sName": "Asesor", "mData": "Asesor", "sClass": "Asesor" },
                            { "sName": "Lider", "mData": "Lider", "sClass": "Lider" },
                            { "sName": "Promotor", "mData": "Promotor", "sClass": "" },
                            { "sName": "Documento", "mData": "Documento", "sClass": "alignCenter" },
                            { "sName": "Fec_Nac", "mData": "Fec_Nac", "sClass": "alignCenter" },
                            { "sName": "Departamento", "mData": "Departamento", "sClass": "" },
                            { "sName": "Provincia", "mData": "Provincia", "sClass": "" },
                            { "sName": "Distrito", "mData": "Distrito", "sClass": "" },
                            { "sName": "Direccion", "mData": "Direccion", "sClass": "" },
                            { "sName": "Telefono", "mData": "Telefono", "sClass": "alignCenter" },
                            { "sName": "Correo", "mData": "Correo", "sClass": "" },
                            //{ "sName": "Celular", "mData": "Celular", "sClass": "alignCenter" },
                            { "sName": "Fecing", "mData": "Fecing", "sClass": "alignCenter" },
                            //Fecactv
                           {
                               "mData": null,
                               "sClass": "alignCenter",
                               "render": function (Data, type, full, meta) {
                                   debugger;
                                    var Fecha = (full.Fecactv == undefined || full.Fecactv == null || full.Fecactv == 0) ? ' ' : new Date(parseInt(full.Fecactv.replace("/Date(", "").replace(")/", ""), 10));
                                    return (Fecha == undefined || Fecha == null || Fecha == 0) ? ' ' : (Fecha.getDate() < 10 ? "0" + Fecha.getDate() : Fecha.getDate()) + "/" + ((Fecha.getMonth() + 1) < 10 ? "0" + (Fecha.getMonth() + 1) : (Fecha.getMonth() + 1)) + "/" + Fecha.getFullYear();
                                }
                            },
                            { "sName": "Activo", "mData": "Activo", "sClass": "alignCenter" }
                        ],
                        "fnRowCallback": function (row, data, index) {
                        },
                        "drawCallback": function (settings) {
                            objPromotorLider.isOkUpdate = false;
                            var table = objPromotorLider.Tabla.dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                            } else {
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                            }

                            $("#TbTabla td:nth-child(1)").addClass("ColC1");
                            $("#TbTabla td:nth-child(2)").addClass("ColC1");
                            $("#TbTabla td:nth-child(3)").addClass("ColC1");
                            objPromotorLider.grid.MergeGridCells("Asesor");
                            objPromotorLider.grid.MergeGridCells("Lider");
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                cargaTabla: function () {
                    debugger
                    waitingDialog.show("Espere por favor...")
                    objPromotorLider.Tabla.DataTable().ajax.reload(function () {
                        waitingDialog.hide();
                    });
                },
                /*Merge*/
                MergeGridCells: function (clasS) {
                    var topMatchTd;
                    var previousValue = "";
                    var rowSpan = 1;
                    $('#TbTabla .' + clasS).each(function () {
                        if ($(this).text() == previousValue) {
                            rowSpan++;
                            $(topMatchTd).attr('rowspan', rowSpan);

                            $(this).remove();
                        }
                        else {
                            topMatchTd = $(this);
                            rowSpan = 1;
                        }
                        previousValue = $(this).text();
                    });
                }
            },
            generaal: {
                FormatDecimal: function (numero, decimales, separadorDecimal, separadorMiles) {
                    //debugger
                    var partes, array;
                    if (!isFinite(numero) || isNaN(numero = parseFloat(numero))) {
                        return "";
                    }
                    if (typeof decimales === "undefined") {
                        decimales = 2;
                    }
                    if (typeof separadorDecimal === "undefined") {
                        separadorDecimal = ".";
                    }
                    if (typeof separadorMiles === "undefined") {
                        separadorMiles = ",";
                    }
                    // Redondeamos
                    if (!isNaN(parseInt(decimales))) {
                        if (decimales >= 0) {
                            numero = numero.toFixed(decimales);
                        } else {
                            numero = (
                                Math.round(numero / Math.pow(10, Math.abs(decimales))) * Math.pow(10, Math.abs(decimales))
                            ).toFixed();
                        }
                    } else {
                        numero = numero.toString();
                    }
                    // Damos formato
                    partes = numero.split(".", 2);
                    array = partes[0].split("");
                    for (var i = array.length - 3; i > 0 && array[i - 1] !== "-"; i -= 3) {
                        array.splice(i, 0, separadorMiles);
                    }
                    numero = array.join("");
                    if (partes.length > 1) {
                        numero += separadorDecimal + partes[1];
                    }
                    return numero;
                },
                Validar : function(){
                    debugger;
                    if (objPromotorLider.IdCliente == "" || objPromotorLider.IdCliente == null || objPromotorLider.IdCliente == 0 || objPromotorLider.IdCliente == undefined) {
                        objPromotorLider.IdCliente = "-1";
                    }
                    if (objPromotorLider.FechaInicio == undefined || objPromotorLider.FechaInicio == null || objPromotorLider.FechaInicio.length == 0 || objPromotorLider.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objPromotorLider.FechaFin == undefined || objPromotorLider.FechaFin == null || objPromotorLider.FechaFin.length == 0 || objPromotorLider.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    debugger
                    if (objPromotorLider.generaal.Validar()) {
                        objPromotorLider.grid.cargaTabla();
                    }
                },
                exportar: function () {
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntPromotorLider)); }();
                    _Ent.FechaInicio = objPromotorLider.FechaInicio;
                    _Ent.FechaFin = objPromotorLider.FechaFin;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_LisPromotorXLider_excel", "RRHH")',
                        data : {_Ent:_Ent},
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListarPromotor_LiderExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al exportar excel.", "Alerta");
                        }
                    });
                }
            }
        };
        $(document).ready(function () {
            $("body").toggleClass('sidebar-collapse');
            objPromotorLider.Inicio();
        });
    </script>
}