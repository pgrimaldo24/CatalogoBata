@model CapaPresentacion.Models.Lista_Cuenta_ContablesViewModel

@{
    ViewBag.Title = "Consulta de Operaciones Gratuitas";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
        vertical-align: middle;
    }

    .alignCenter {
        text-align: center;
        vertical-align: middle;
    }    
</style>
<p class="text-primary">Consulte entre un rango de fechas, todas las operaciones gratuitas.</p>
<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-sm-3">

        </div>
        <div class="col-md-3" style="padding-left: 30px; padding-right: 0px;">
            <label for="" style="color: #3d566e;">Concepto</label>
            <div class="form-group">
                @Html.DropDownList("ddlConceptos", new SelectList(ViewBag.Listar_ConceptoOG, "Codigo", "Descripcion", null), new { @class = "form-control ", @id = "ddlConceptos", @name = "ddlConceptos" })
            </div>
        </div>
        <div class="col-md-6" style="padding-left: 0px;">
            <div class="col-md-5" style="padding-right: 0px;">
                <div>
                    <label for="dtpFechaNotaCredito" style="color: #3d566e;">Fecha de Inicio</label>
                    <div id="datepickerIni" class="input-group date" data-date-format="dd/mm/yyyy">
                        <input id="dtpFechaInicio" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                        <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                            <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <label for="dtpFechaNotaCredito" style="color: #3d566e;">Fecha de Cierre</label>
                <div id="datepickerFin" class="input-group date" data-date-format="dd/mm/yyyy">
                    <input id="dtpFechaFin" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                    <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                        <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                    </span>
                </div>
            </div>
            <div class="col-md-2 text-right" style="padding:0px">
                <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary" style="margin-top: 19px;">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">

        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Actualizar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="TbTabla" class="table table-hover table-bordered compact">
                    <thead>
                        <tr>
                            <th style="text-align: center;">Tipo</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Tipo Documento</th>
                            <th style="text-align: center;">Nro Documento</th>
                            <th style="text-align: center;">Doc. cliente</th>
                            <th style="text-align: center;">Cliente</th>
                            <th style="text-align: center;">Sub Total</th>
                            <th style="text-align: center;">IGV</th>
                            <th style="text-align: center;">Total</th>

                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan='9'>No se encontraron resultados</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        debugger
        var objOpeGratuitas = {
            Inicio: function () {
                debugger
                /*[Inicializamos variables]*/
                var date = new Date();

                $("#datepickerIni").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "01/" + (date.getMonth() + 1) +"/"+ date.getFullYear());

                $("#datepickerFin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                this.isOkUpdate = true;
                this.isOkConcepto = false;
                this.FechaInicio = $("#dtpFechaInicio").val();
                this.FechaFin = $("#dtpFechaFin").val();
                this.Tipo = $("#ddlConceptos").val();
                this.TipoTxt = $("#ddlConceptos option:selected").text();
                this.Tabla = $('#TbTabla');
                
                objOpeGratuitas.grid.get();
                /*[/Inicializamos variables]*/

                /*[btn Exportar y buscar]*/
                $("#btnExportar").click(function () {
                    objOpeGratuitas.FechaInicio = $("#dtpFechaInicio").val();
                    objOpeGratuitas.FechaFin = $("#dtpFechaFin").val();
                    objOpeGratuitas.Tipo = $("#ddlConceptos").val();
                    objOpeGratuitas.TipoTxt = $("#ddlConceptos option:selected").text();
                    waitingDialog.show("Espere por favor...")
                    objOpeGratuitas.generaal.exportar();
                })
                $("#btnBuscar").click(function () {
                    objOpeGratuitas.isOkUpdate = true;
                    objOpeGratuitas.FechaInicio = $("#dtpFechaInicio").val();
                    objOpeGratuitas.FechaFin = $("#dtpFechaFin").val();
                    objOpeGratuitas.Tipo = $("#ddlConceptos").val();
                    objOpeGratuitas.generaal.consultar();
                })
                /*[btn Exportar y buscar]*/

                /*[Select Conceptos]*/
                $("#ddlConceptos").change(function () {
                    objOpeGratuitas.isOkUpdate = true;
                    objOpeGratuitas.FechaInicio = $("#dtpFechaInicio").val();
                    objOpeGratuitas.FechaFin = $("#dtpFechaFin").val();
                    objOpeGratuitas.Tipo = $("#ddlConceptos").val();
                    objOpeGratuitas.generaal.consultar();
                })
                /*[Select Conceptos]*/
            },
            grid: {
                get: function () {
                    debugger
                    objOpeGratuitas.Tabla.DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        //"fnServerData": function (sSource, aoData, fnCallback) {
                        //},
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getListOpeGratuitastAjax", "Financiera")',
                        "fnServerParams": function (aoData) {
                            debugger;
                            aoData.push({ "name": "isOkUpdate", "value": objOpeGratuitas.isOkUpdate });
                            aoData.push({ "name": "FechaInicio", "value": objOpeGratuitas.FechaInicio });
                            aoData.push({ "name": "FechaFin", "value": objOpeGratuitas.FechaFin });
                            aoData.push({ "name": "Tipo", "value": objOpeGratuitas.Tipo });
                        },
                        "bFilter": true,
                        "bdestroy": true,
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [],
                        }],
                        "bDeferRender": true,
                        "aoColumns": [
                            { "sName": "Tipo", "mData": "Tipo", "sClass": "alignCenter" },
                            { "sName": "Fecha", "mData": "Fecha", "sClass": "alignCenter" },
                            { "sName": "TipoDocumento", "mData": "TipoDocumento", "sClass": "" },
                            { "sName": "NroDocumento", "mData": "NroDocumento", "sClass": "alignCenter" },
                            { "sName": "Doc_cliente", "mData": "Doc_cliente", "sClass": "alignCenter" },
                            { "sName": "Cliente", "mData": "Cliente", "sClass": "" },
                            //{ "sName": "SubTotal", "mData": "SubTotal", "sClass": "alignRight" },
                            //{ "sName": "IGV", "mData": "IGV", "sClass": "alignRight" },
                            //{ "sName": "Total", "mData": "Total", "sClass": "alignRight" }
                            {
                                "sName": "SubTotal", "mData": "SubTotal", "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    let SubTotal = full.SubTotal;
                                    return (SubTotal == undefined || SubTotal == null || SubTotal == 0) ? ' ' : 'S/ ' + SubTotal.toFixed(2);
                                }
                            },
                            {
                                "sName": "IGV", "mData": "IGV", "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    let IGV = full.IGV;
                                    return (IGV == undefined || IGV == null || IGV == 0) ? ' ' : 'S/ ' + IGV.toFixed(2);
                                }
                            },
                            {
                                "sName": "Total", "mData": "Total", "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    let Total = full.Total;
                                    return (Total == undefined || Total == null || Total == 0) ? ' ' : 'S/ ' + Total.toFixed(2);
                                }
                            },

                        ],
                        "fnRowCallback": function (row, data, index) {
                        },
                        "drawCallback": function (settings) {
                            objOpeGratuitas.isOkUpdate = false;
                            var table = objOpeGratuitas.Tabla.dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                            } else {
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                            }
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                cargaTabla: function () {
                    debugger
                    waitingDialog.show("Espere por favor...")
                    objOpeGratuitas.Tabla.DataTable().ajax.reload(function () {
                        waitingDialog.hide();
                    });
                },
            },
            generaal: {
                Validar : function(){
                    debugger;
                    if (objOpeGratuitas.FechaInicio == undefined || objOpeGratuitas.FechaInicio == null || objOpeGratuitas.FechaInicio.length == 0 || objOpeGratuitas.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objOpeGratuitas.FechaFin == undefined || objOpeGratuitas.FechaFin == null || objOpeGratuitas.FechaFin.length == 0 || objOpeGratuitas.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    debugger
                    if (objOpeGratuitas.generaal.Validar()) {
                        objOpeGratuitas.grid.cargaTabla();
                    }
                },
                exportar: function () {
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntOpeGratuita)); }();
                    _Ent.FechaInicio = objOpeGratuitas.FechaInicio;
                    _Ent.FechaFin = objOpeGratuitas.FechaFin;
                    _Ent.Tipo = objOpeGratuitas.Tipo;
                    _Ent.TipoNombre = objOpeGratuitas.TipoTxt;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_ListarOpeGratuitas_excel", "Financiera")',
                        data : {_Ent:_Ent},
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListarOpeGratuitasExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al exportar excel.", "Alerta");
                        }
                    });
                }
            }
        };
        $(document).ready(function () {
            objOpeGratuitas.Inicio();
        });
</script>
}