@{
    ViewBag.Title = "Creación de pagos";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .modal-dialog {
        width: 370px;
        /*margin: 20px auto;*/
        /*height:50px;*/
    }
    input,
    select,
    textarea {
    max-width: 100% ;
    }

</style>

<div class="row">
    <div class="col-md-7">
        <div class="panel panel-primary">
            <div class="panel-heading">Creando nuevo pago </div>
            <div class="box box-body box-header">
                <div class="col-md-6">
                    <div id="prm" class="form-group" disabled >
                        <label for="dwtipocliente" style="color: #3d566e;"><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Desc: Seleccione un Promotor sobre el cual realizará las acciones.)"></i>Selección de Promotor </label>
                        <div class="form-group" id="IdDivClientes">
                            @Html.DropDownList("ddlClientes", new SelectList(ViewBag.ListarPromotor, "codigo", "descripcion", null), "Seleccione", new { @class = "form-control selectpicker", @data_live_search = "true", @id = "ddlClientes", @name = "ddlClientes" })                            
                        </div>                                             
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-7">
        <div class="box box-widget">
            <div class="box-header with-border">
                <div class="user-block">
                    <label style="color:#f88989;font-weight:bold;padding-left: 12px;">Formulario de registro de recaudo</label>
                </div>
                <div class="box-tools">
                @*
                <i class="glyphicon glyphicon-question-sign"></i>
                *@
                </div>
            </div>

            <div class="box-body">
                <div class="row">
                    <div class="col-md-6" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="ddlBanco"  ><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Ej: Banco de crédito del Perú, etc)"></i>Seleccione banco</label>
                            <div class="form-group" id="IdDivBanco">
                                @Html.DropDownList("ddlBanco", new SelectList(ViewBag.ListarBancos, "Codigo", "Descripcion", null), "Selecione", new { @class = "form-control selectpicker", @data_live_search = "true", @id = "ddlBanco", @name = "ddlBanco" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="ddlConceptos" ><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Ej: Consignación en efectivo, mediante cheque, etc)"></i>Medio de pago</label>
                            <div class="form-group" id="IdDivConceptos">
                                @Html.DropDownList("ddlConceptos", new SelectList(ViewBag.ListarConceptos, "Codigo", "Descripcion", null), "Selecione", new { @class = "form-control selectpicker", @data_live_search = "true", @id = "ddlConceptos", @name = "ddlConceptos" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="TxtNroOperacion" style="color: #3d566e;"><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Ej: 13487326-8)"></i>Comprobante de pago</label>
                            <div id="IdDivNroOperacion" class="form-group">
                                @Html.TextBox("TxtNroOperacion", null, new { @class = "form-control custom-input" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="dtpFechaConsignacion" style="color: #3d566e;"><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(dd/mm/aa Ej: 26/09/08, 1/9/2008)"></i>Fecha de la consignacion </label>
                            <div class="form-group" >
                                <div class="input-group" id="IdDivFechaConsignacion" >
                                    <div id="dtpFecha" class="input-group date" data-date-format="dd-mm-yyyy">
                                        @Html.TextBox("dtpFechaConsignacion", null, new { @class = "form-control custom-input", @placeholder = "dd-mm-yyyy", @disabled = "disabled" })
                                        
                                        <span class="input-group-addon  bg-white"><img src="~/Content/images/wall-calendar-with-lines.svg" height="20" width="20"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="txtpriapepat" style="color: #3d566e;"><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Ej: 57000, 120000, 2500000, 0,23)"></i>Valor consignado </label>
                            <div class="form-group" id="IdDivValConsignado">
                                @Html.TextBox("txtValConsignado", null, new { @class = "form-control custom-input" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12" style="padding-left: 25px;">
                        <div id="prm" class="form-group" disabled>
                            <label for="txtpriapepat" style="color: #3d566e;"><i class="glyphicon glyphicon-question-sign" style="margin-right: 5px; color:#00c0ef" data-toggle="tooltip" data-placement="top" title="(Ej: El banco me dice que esta consignacion se refleja dos dias despues.)"></i>Notas adicionales</label>
                            <div class="form-group">
                                <textarea Id="TxtNota"class="form-control" rows="3" ></textarea>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-7">
        <div class="box box-body box-footer">
            <div class="box-header with-border">
                <div class="modal-footer" style="margin-top:-10px">
                    <div class="col-md-12">
                        <button name="btncancelar" id="btncancelar" title="Cancelar" onclick="cancelar();" type="button" class="btn btn-danger">
                            <span class="glyphicon glyphicon-remove-circle">
                            </span>&nbsp;Cancelar
                        </button>
                        <button name="btnGuardar" id="btnGuardar" title="Guardar" class="btn btn-success" type="submit"><span class="glyphicon glyphicon-ok-circle"></span>&nbsp;Guardar</button>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>

        function cancelar() {
            $("#btnGuardar").prop("disabled", true);
            $("#btncancelar").prop("disabled", true);


            window.location = '@Url.Action("ListarPagos", "Financiera")';
        }


        var objNuevoPago = {
            Inicio: function () {
                debugger

                $("#dtpFecha").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                this.ddlClientes = '';
                this.ddlBanco = '';
                this.ddlConceptos = '';
                this.TxtNroOperacion = '';
                this.dtpFechaConsignacion = '';
                this.txtValConsignado = ''
                this.TxtNota = ''

                objNuevoPago.Input.SoloNumeros($("#TxtNroOperacion"));
                objNuevoPago.Input.SoloDecimales($("#txtValConsignado"));
                objNuevoPago.Input.SoloTexto($("#TxtNota"));

                $("#btnGuardar").click(function () {
                    objNuevoPago.ddlClientes = $("#ddlClientes").val();
                    objNuevoPago.ddlBanco = $("#ddlBanco").val();
                    objNuevoPago.ddlConceptos = $("#ddlConceptos").val();
                    objNuevoPago.TxtNroOperacion = $("#TxtNroOperacion").val();
                    objNuevoPago.dtpFechaConsignacion = $("#dtpFechaConsignacion").val();
                    objNuevoPago.txtValConsignado = $("#txtValConsignado").val()
                    objNuevoPago.TxtNota = $("#TxtNota").val()
                    objNuevoPago.general.Registrar();
                })
            },
            Input: {
                SoloTexto: function (element) {
                    //SOLO LETRAS CON NUMERO SIN CARACTERES ESPECIALES
                    $(element).keypress(function (e) {
                        var keyCode = e.keyCode || e.which;
                        var regex = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ0-9. ]+$/;
                        //Validate TextBox value against the Regex.
                        var isValid = regex.test(String.fromCharCode(keyCode));
                        return isValid;
                    });
                },
                SoloDecimales: function (element) {
                    // SOLO NUMEROS CON PUNTO DECIMAL		

                    $(element).keypress(function (evt) {
                        var el = this;
                        var charCode = (evt.which) ? evt.which : event.keyCode
                        if (charCode != 45 && charCode != 8 && (charCode != 46) && (charCode < 48 || charCode > 57))
                            return false;
                        if (charCode == 46) {
                            if ((el.value) && (el.value.indexOf('.') >= 0))
                                return false;
                            else
                                return true;
                        }

                        return true;
                        var charCode = (evt.which) ? evt.which : event.keyCode;
                        var number = evt.value.split('.');
                        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                            return false;
                        }
                    });
                },
                SoloNumeros: function (element) {
                    //SOLO NUMEROS 
                    $(element).keypress(function (e) {
                        var keyCode = e.keyCode || e.which;
                        var regex = /^[0-9]$/;
                        var isValid = regex.test(String.fromCharCode(keyCode));
                        if (!isValid) {
                        }
                        return isValid;
                    });
                },
                IsNumeric: function (n) {
                    debugger
                    return !isNaN(parseFloat(n)) && isFinite(n);
                }
            },
            general: {
                Validar: function () {
                    debugger
                    if (objNuevoPago.ddlClientes == undefined || objNuevoPago.ddlClientes == null || objNuevoPago.ddlClientes == 0 || objNuevoPago.ddlClientes == '') {
                        swal({title: "Alerta",text: "Debe seleccionar un promotor.",icon: "error"}).then((value) => {});
                        $("#IdDivClientes").addClass("has-error");
                        return false;
                    }
                    $("#IdDivClientes").removeClass("has-error");
                    if (objNuevoPago.ddlBanco == undefined || objNuevoPago.ddlBanco == null || objNuevoPago.ddlBanco == 0 || objNuevoPago.ddlBanco == '') {
                        swal({ title: "Alerta", text: "Debe seleccionar una entidad recaudadora.", icon: "error" }).then((value) => { });                        
                        $("#IdDivBanco").addClass("has-error");
                        return false;
                    }
                    $("#IdDivBanco").removeClass("has-error");
                    if (objNuevoPago.ddlConceptos == undefined || objNuevoPago.ddlConceptos == null || objNuevoPago.ddlConceptos == 0 || objNuevoPago.ddlConceptos == '') {                        
                        swal({ title: "Alerta", text: "Debe seleccionar un medio de pago.", icon: "error" }).then((value) => { });
                        $("#IdDivConceptos").addClass("has-error");
                        return false;
                    }
                    $("#IdDivConceptos").removeClass("has-error");
                    if (objNuevoPago.TxtNroOperacion == undefined || objNuevoPago.TxtNroOperacion == null || objNuevoPago.TxtNroOperacion == 0 || objNuevoPago.TxtNroOperacion == '') {
                        swal({ title: "Alerta", text: "Debe ingresar un número de operación.", icon: "error" }).then((value) => { });
                        $("#IdDivNroOperacion").addClass("has-error");
                        $('#TxtNroOperacion').focus();
                        return false;
                    }
                    $("#IdDivNroOperacion").removeClass("has-error");
                    if (objNuevoPago.dtpFechaConsignacion == undefined || objNuevoPago.dtpFechaConsignacion == null || objNuevoPago.dtpFechaConsignacion == 0 || objNuevoPago.dtpFechaConsignacion == '') {
                        swal({ title: "Alerta", text: "Debe ingresar una fecha de consignación.", icon: "error" }).then((value) => { });
                        $("#IdDivFechaConsignacion").addClass("has-error");
                        return false;
                    }
                    $("#IdDivFechaConsignacion").removeClass("has-error");
                    if (objNuevoPago.txtValConsignado == undefined || objNuevoPago.txtValConsignado == null || objNuevoPago.txtValConsignado == 0 || objNuevoPago.txtValConsignado == '' || !objNuevoPago.Input.IsNumeric(objNuevoPago.txtValConsignado)) {
                        swal({ title: "Alerta", text: "Debe ingresar un valor consignado.", icon: "error" }).then((value) => { });
                        $("#IdDivValConsignado").addClass("has-error");
                        $('#txtValConsignado').focus();
                        return false;
                    }
                    $("#IdDivValConsignado").removeClass("has-error");
                    if (objNuevoPago.TxtNota == undefined || objNuevoPago.TxtNota == null || objNuevoPago.TxtNota == 0 || objNuevoPago.TxtNota == '') {
                        objNuevoPago.TxtNota = '';
                    }
                    //Validamos si el nro de operación ya existe.
                    if (objNuevoPago.general.ValOperacion()) {
                        swal({ title: "Alerta", text: "El número de operacion ya esta registrado.", icon: "error" }).then((value) => { });
                        $("#IdDivNroOperacion").addClass("has-error");
                        $('#TxtNroOperacion').focus();
                        return false;
                    }
                    $("#IdDivNroOperacion").removeClass("has-error");
                    return true;
                },
                ValOperacion: function () {
                    debugger
                    var rpt = false
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.Pago)); }();
                    _Ent.Pag_BasId = objNuevoPago.ddlClientes;
                    _Ent.Pag_BanId = objNuevoPago.ddlBanco;
                    _Ent.Pag_Num_ConsFecha = objNuevoPago.dtpFechaConsignacion;
                    _Ent.Pag_Num_Consignacion = objNuevoPago.TxtNroOperacion;
                    _Ent.Pag_Monto = objNuevoPago.txtValConsignado;

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("getValOperacion", "Financiera")',
                        data: { _Ent: _Ent },
                        async: false,
                        success: function (data) {
                            data = JSON.parse(data);
                            if (data.Success) {
                                debugger
                                rpt = true
                            } else {
                                debugger
                                rpt = false
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            swal({ title: "Alerta", text: "Error al consultar.", icon: "error" }).then((value) => { });
                            //toastr.error("Error al consultar.", "Alerta");
                        }
                    });
                    return rpt;
                },
                Registrar : function(){
                    if (objNuevoPago.general.Validar()) {
                        swal({
                            title: "Guardar datos del pago",
                            text: "¿Está seguro de guardar el pago?",
                            icon: "warning",
                            buttons: ["No", "Si"],
                            dangerMode: true,
                        }).then((cambiar) => {
                            if (cambiar) {
                                waitingDialog.show("Espere un momento por favor.")
                                var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.Pago)); }();
                                _Ent.Pag_BasId = objNuevoPago.ddlClientes;
                                _Ent.Pag_BanId = objNuevoPago.ddlBanco;
                                _Ent.Pag_Num_ConsFecha = objNuevoPago.dtpFechaConsignacion;
                                _Ent.Pag_Num_Consignacion = objNuevoPago.TxtNroOperacion;
                                _Ent.Pag_Monto = objNuevoPago.txtValConsignado;
                                _Ent.Pag_ConId = objNuevoPago.ddlConceptos;
                                _Ent.Pag_Comentario = objNuevoPago.TxtNota;

                                $.ajax({
                                    type: "POST",
                                    url: '@Url.Action("getRegistrarPago", "Financiera")',
                                    data: { _Ent: _Ent },
                                    async: false,
                                    success: function (data) {
                                        data = JSON.parse(data);
                                        if (data.Success) {
                                            //toastr.success(data.Message);
                                            swal({title: "Ok",text: data.Message,icon: "success"}).then((value) => {});
                                            waitingDialog.hide();
                                            setTimeout(function () {
                                                @*window.location.href = '@Url.Action("ListarPagos", "Financiera", null)'*@
                                                cancelar();
                                            },50)
                                        } else {
                                            swal({ title: "Alerta", text: data.Message, icon: "error" }).then((value) => { });                                            
                                            waitingDialog.hide();
                                        }
                                    },
                                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                                        waitingDialog.hide();
                                        swal({ title: "Alerta", text: "Error al grabar.", icon: "error" }).then((value) => { });                                        
                                    }
                                });
                            }
                        })
                    }
                }
            }
        };

        $(document).ready(function () {
            objNuevoPago.Inicio();
        });
    </script>
}