@{
    ViewBag.Title = "Movimiento de Ventas-Pagos";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
        vertical-align: middle;
    }

    .alignCenter {
        text-align: center;
        vertical-align: middle;
    }
</style>
<p class="text-primary">Consulte entre un rango de fechas. las ventas-pagos.</p>
<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-md-6" style="padding-left: 0px;">
        </div>
        <div class="col-md-6" style="padding-left: 0px;">
            <div class="col-md-5" style="padding-right: 0px;">
                <div>
                    <label for="dtpFechaIni" style="color: #3d566e;">Fecha de Inicio</label>
                    <div id="datepickerIni" class="input-group date" data-date-format="dd/mm/yyyy">
                        <input id="dtpFechaInicio" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                        <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                            <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <label for="dtpFechaFin" style="color: #3d566e;">Fecha de Cierre</label>
                <div id="datepickerFin" class="input-group date" data-date-format="dd/mm/yyyy">
                    <input id="dtpFechaFin" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                    <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                        <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                    </span>
                </div>
            </div>
            <div class="col-md-2 text-right" style="padding:0px">
                <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary" style="margin-top: 22px;">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">
        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Actualizar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="TbTabla" class="table table-hover table-bordered compact">
                    <thead>
                        <tr>
                            <th colspan="7"></th>
                            <th colspan="3" style="text-align: center;">Ticket</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 1</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 2</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 3</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 4</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 5</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 6</th>
                            <th colspan="3" style="text-align: center;">Nota de Credito 7</th>
                            <th colspan="3"></th>
                            <th colspan="2" style="text-align: center;">Saldo Anterior</th>
                            <th colspan="4" style="text-align: center;"></th>
                        </tr>
                        <tr>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Des. Operación</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Num. Operación</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Dni/Ruc</th>
                            <th style="text-align: center;">Nombre/Razon Social</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Número</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">Base Imponible</th>
                            <th style="text-align: center;">Percepción 2%</th>
                            <th style="text-align: center;">Tot. Ticket</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Importe</th>
                            <th style="text-align: center;">A Pagar</th>
                            <th style="text-align: center;">Deposito</th>
                            <th style="text-align: center;">Saldo Favor</th>
                            <th style="text-align: center;">Ajuste</th>   
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan='40'>No se encontraron resultados</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        var objMovVentPagos = {
            Inicio: function () {
                debugger
                /*[Inicializamos variables]*/
                var date = new Date();

                $("#datepickerIni").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "01/" + (date.getMonth() + 1) +"/"+ date.getFullYear());

                $("#datepickerFin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                this.isOkUpdate = false;
                this.FechaInicio = $("#dtpFechaInicio").val();
                this.FechaFin = $("#dtpFechaFin").val();
                this.Tabla = $('#TbTabla');

                objMovVentPagos.grid.get();
                /*[/Inicializamos variables]*/

                /*[btn Exportar y buscar]*/
                $("#btnExportar").click(function () {
                    objMovVentPagos.FechaInicio = $("#dtpFechaInicio").val();
                    objMovVentPagos.FechaFin = $("#dtpFechaFin").val();
                    objMovVentPagos.Cod_Id = $("#ddlConceptos").val();
                    waitingDialog.show("Espere por favor...")
                    objMovVentPagos.generaal.exportar();
                })
                $("#btnBuscar").click(function () {
                    debugger
                    objMovVentPagos.isOkUpdate = true;
                    objMovVentPagos.FechaInicio = $("#dtpFechaInicio").val();
                    objMovVentPagos.FechaFin = $("#dtpFechaFin").val();
                    objMovVentPagos.generaal.consultar();
                })
                /*[btn Exportar y buscar]*/
            },
            grid: {
                get: function () {
                    debugger
                    objMovVentPagos.Tabla.DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        //"fnServerData": function (sSource, aoData, fnCallback) {
                        //},
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getLisMovimientosPagosAjax", "Financiera")',
                        "fnServerParams": function (aoData) {
                            debugger;
                            aoData.push({ "name": "isOkUpdate", "value": objMovVentPagos.isOkUpdate });
                            aoData.push({ "name": "FechaInicio", "value": objMovVentPagos.FechaInicio });
                            aoData.push({ "name": "FechaFin", "value": objMovVentPagos.FechaFin });
                        },
                        "bFilter": true,
                        "bdestroy": true,
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [],
                        }],
                        "bDeferRender": true,
                        "aoColumns": [
                                { "sName": "Fecha_Op", "mData": "Fecha_Op", "sClass": "alignCenter" },
                                { "sName": "Des_Operacion", "mData": "Des_Operacion", "sClass": "" },
                                //Op_Monto
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Op_Monto;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Op_Numero", "mData": "Op_Numero", "sClass": "alignCenter" },
                                { "sName": "Fecha_Op2", "mData": "Fecha_Op2", "sClass": "alignCenter" },
                                { "sName": "Dni_Ruc", "mData": "Dni_Ruc", "sClass": "" },
                                { "sName": "Cliente", "mData": "Cliente", "sClass": "" },
                                { "sName": "Fecha_Doc", "mData": "Fecha_Doc", "sClass": "alignCenter" },
                                { "sName": "Num_Doc", "mData": "Num_Doc", "sClass": "alignCenter" },
                                //Importe_Doc
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Doc;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito", "mData": "Fecha_Ncredito", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito", "mData": "Num_Ncredito", "sClass": "alignCenter" },
                                //Importe_Ncredito
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito2", "mData": "Fecha_Ncredito2", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito2", "mData": "Num_Ncredito2", "sClass": "alignCenter" },
                                //Importe_Ncredito2
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito2;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito3", "mData": "Fecha_Ncredito3", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito3", "mData": "Num_Ncredito3", "sClass": "alignCenter" },
                                //Importe_Ncredito3
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito3;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito4", "mData": "Fecha_Ncredito4", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito4", "mData": "Num_Ncredito4", "sClass": "alignCenter" },
                                //Importe_Ncredito4
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito4;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito5", "mData": "Fecha_Ncredito5", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito5", "mData": "Num_Ncredito5", "sClass": "alignCenter" },
                                //Importe_Ncredito5
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito5;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito6", "mData": "Fecha_Ncredito6", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito6", "mData": "Num_Ncredito6", "sClass": "alignCenter" },
                                //Importe_Ncredito6
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito6;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Ncredito7", "mData": "Fecha_Ncredito7", "sClass": "alignCenter" },
                                { "sName": "Num_Ncredito7", "mData": "Num_Ncredito7", "sClass": "alignCenter" },
                                //Importe_Ncredito7
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Ncredito7;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Base_Imponible
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Base_Imponible;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Percepcion
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Percepcion;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Total
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Total;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                { "sName": "Fecha_Saldo_Ant", "mData": "Fecha_Saldo_Ant", "sClass": "alignCenter" },
                                //Importe_Saldo_Ant
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Importe_Saldo_Ant;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Pagar
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Pagar;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Deposito
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Deposito;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //{Saldo_Favor
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Saldo_Favor;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },
                                //Ajuste
                                {
                                    "mData": null,
                                    "sClass": "alignRight",
                                    "render": function (Data, type, full, meta) {
                                        let Monto = full.Ajuste;
                                        return (Monto == undefined || Monto == null || Monto == 0) ? ' ' : 'S/ ' + Monto.toFixed(2);
                                    }
                                },


                        ],
                        "fnRowCallback": function (row, data, index) {
                        },
                        "drawCallback": function (settings) {
                            objMovVentPagos.isOkUpdate = false;
                            var table = objMovVentPagos.Tabla.dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                            } else {
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                            }
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                cargaTabla: function () {
                    debugger
                    waitingDialog.show("Espere por favor...")
                    objMovVentPagos.Tabla.DataTable().ajax.reload(function () {
                        waitingDialog.hide();
                    });
                },
            },
            generaal: {
                Validar : function(){
                    debugger;
                    if (objMovVentPagos.FechaInicio == undefined || objMovVentPagos.FechaInicio == null || objMovVentPagos.FechaInicio.length == 0 || objMovVentPagos.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objMovVentPagos.FechaFin == undefined || objMovVentPagos.FechaFin == null || objMovVentPagos.FechaFin.length == 0 || objMovVentPagos.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    debugger
                    if (objMovVentPagos.generaal.Validar()) {
                        objMovVentPagos.grid.cargaTabla();
                    }
                },
                exportar: function () {
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntMovimientosPagos)); }();
                    _Ent.FechaInicio = objMovVentPagos.FechaInicio;
                    _Ent.FechaFin = objMovVentPagos.FechaFin;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_ListarMovimientosPagos_excel", "Financiera")',
                        data : {_Ent:_Ent},
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListarMovimientosPagosExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al exportar excel.", "Alerta");
                        }
                    });
                }
            }
        };
        $(document).ready(function () {
            objMovVentPagos.Inicio();
        });
    </script>
}