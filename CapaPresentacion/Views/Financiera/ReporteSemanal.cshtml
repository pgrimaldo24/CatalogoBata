@model CapaPresentacion.Models.Lista_Cuenta_ContablesViewModel

@{
    ViewBag.Title = "Consulta de ventas semanal.";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
    }

    .alignCenter {
        text-align: center;
    }

    .table .tdClassTot {
        color: #000 !important;
        background-color: #b1dbf3 !important;
        font-weight: bold;
    }

   .table .ColC1 {
        color: #000 !important;
        background-color: #7FCCF4;        
        font-weight: bold;
        vertical-align: middle;

    }

   .table .ColC2 {
        color: #000 !important;
        background-color: #B1DEF6;        
        font-weight: bold;
        vertical-align: middle;
    }

    .table .ColC3 {
        color: #000 !important;
        background-color: #E2F4FE;        
        font-weight: bold;
        vertical-align: middle;
    }

   .table .BorderRows 
    {
        border-top:solid 3px blue;
    }

</style>

<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-sm-3">
            <label for="fecini">Fec. Ini</label>
            <div class="form-group">
                <div id="datepickerini" class="input-group date" data-date-format="dd-mm-yyyy">
                    @Html.TextBoxFor(m => m.FechaInicio, new { @class = "form-control custom-input", @placeholder = "dd-mm-yyyy", @disabled = "disabled" })
                    <span class="input-group-addon  bg-white"><img src="~/Content/images/wall-calendar-with-lines.svg" height="20" width="20"></span>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <label for="fecfin">Fec. Fin</label>
            <div class="form-group">
                <div id="datepickerfin" class="input-group date" data-date-format="dd-mm-yyyy">
                    @Html.TextBoxFor(m => m.FechaFin, new { @class = "form-control custom-input", @placeholder = "dd-mm-yyyy", @disabled = "disabled" })
                    <span class="input-group-addon  bg-white"><img src="~/Content/images/wall-calendar-with-lines.svg" height="20" width="20"></span>
                </div>
            </div>
        </div>
        <div class="col-sm-2" style="padding-left: 25px; width: 105px; margin-top: 23px; margin-bottom: 10px;">
            <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary">
                <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
            </button>
        </div>
    </div>
</div>
<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">

        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Actualizar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="tbVtSemanal" class="table table-hover table-bordered compact">
                    <thead>
                        <tr>
                            <th colspan="3"></th>
                            <th colspan="3" style="text-align: center;">Datos del Documento Boleta o Factura</th>
                            <th colspan="3" style="text-align: center;">Deposito del Banco de Credito</th>
                            <th colspan="3" style="text-align: center;">Deposito de Visa Unica</th>
                            <th colspan="3" style="text-align: center;">Datos de la Nota de Credito</th>
                            <th colspan="2" style="text-align: center;">Saldo Anterior</th>
                            <th colspan="2"></th>
                        </tr>
                        <tr>
                            <th style="text-align: center;">Promotor</th>
                            <th style="text-align: center;">Dni/Ruc</th>
                            <th style="text-align: center;">Ped</th>
                            <th style="text-align: center;">Número </th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Número </th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Número </th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Número </th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Fecha</th>
                            <th style="text-align: center;">Monto</th>
                            <th style="text-align: center;">Tot. Pagar</th>
                            <th style="text-align: center;">Sal. Favor</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan='12'>No se encontraron resultados</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        debugger
        var objVtaSemanal = {
            Inicio: function () {
                debugger

                $("#datepickerini").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                $("#datepickerfin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                this.isOkUpdate =true;
                this.FechaInicio = $("#FechaInicio").val();
                this.FechaFin = $("#FechaFin").val();

                objVtaSemanal.grid.get();

                $("#btnExportar").click(function () {
                    objVtaSemanal.FechaInicio = $("#FechaInicio").val();
                    objVtaSemanal.FechaFin = $("#FechaFin").val();
                    waitingDialog.show("Espere por favor...")
                    objVtaSemanal.generaal.exportar();
                })

                $("#btnBuscar").click(function () {
                    objVtaSemanal.isOkUpdate = true;
                    objVtaSemanal.FechaInicio = $("#FechaInicio").val();
                    objVtaSemanal.FechaFin = $("#FechaFin").val();
                    objVtaSemanal.generaal.consultar();
                    objVtaSemanal.isOkUpdate = false;
                })
            },
            grid: {
                get: function () {
                    debugger
                    $('#tbVtSemanal').DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getListaVentaSemanalAjax", "Financiera")',
                        "fnServerParams": function (aoData) {
                            debugger;
                            aoData.push({ "name": "isOkUpdate", "value": objVtaSemanal.isOkUpdate });
                            aoData.push({ "name": "FechaInicio", "value": objVtaSemanal.FechaInicio });
                            aoData.push({ "name": "FechaFin", "value": objVtaSemanal.FechaFin });
                        },
                        "bFilter": true,
                        "bdestroy": true,
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],
                        }],
                        "bDeferRender": true,
                        "aoColumns": [
                            { "sName": "Promotor", "mData": "Promotor", "sClass": "Promotor" },
                            { "sName": "DniRuc", "mData": "DniRuc", "sClass": "alignCenter DniRuc" },
                            { "sName": "Ped", "mData": "Ped", "sClass": "alignCenter" },

                            { "sName": "BolFact", "mData": "BolFact", "sClass": "alignCenter" },
                            { "sName": "FechaDoc", "mData": "FechaDoc", "sClass": "alignCenter" },
                            {
                                "sName": "MontoFac", "mData": "MontoFac",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var MontoFac = full.MontoFac;
                                    return (MontoFac == undefined || MontoFac == null || MontoFac == 0) ? ' ' : MontoFac.toFixed(2);
                                }
                            },
                            { "sName": "NroVouBcp", "mData": "NroVouBcp", "sClass": "alignRight" },
                            { "sName": "FechavouBcp", "mData": "FechavouBcp", "sClass": "alignRight" },
                            {
                                "sName": "MontoVouBcp", "mData": "MontoVouBcp",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var MontoVouBcp = full.MontoVouBcp;
                                    return (MontoVouBcp == undefined || MontoVouBcp == null || MontoVouBcp == 0) ? ' ' : MontoVouBcp.toFixed(2);
                                }
                            },
                            { "sName": "NroVisa", "mData": "NroVisa", "sClass": "alignRight" },
                            { "sName": "FechaVisa", "mData": "FechaVisa", "sClass": "alignRight" },
                            {
                                "sName": "MontoVisa", "mData": "MontoVisa",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var MontoVisa = full.MontoVisa;
                                    return (MontoVisa == undefined || MontoVisa == null || MontoVisa == 0) ? ' ' : MontoVisa.toFixed(2);
                                }
                            },
                            { "sName": "Nronc", "mData": "Nronc", "sClass": "alignRight" },
                            { "sName": "Fechanc", "mData": "Fechanc", "sClass": "alignRight" },
                            {
                                "sName": "Montonc", "mData": "Montonc",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var Montonc = full.Montonc;
                                    return (Montonc == undefined || Montonc == null || Montonc == 0) ? ' ' : Montonc.toFixed(2);
                                }
                            },
                            { "sName": "FechaSaldoant", "mData": "FechaSaldoant", "sClass": "alignRight" },
                            {
                                "sName": "MontoSaldoant", "mData": "MontoSaldoant",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var MontoSaldoant = full.MontoSaldoant;
                                    return (MontoSaldoant == undefined || MontoSaldoant == null || MontoSaldoant == 0) ? ' ' : MontoSaldoant.toFixed(2);
                                }
                            },
                            {
                                "sName": "TotalPagos", "mData": "TotalPagos",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var TotalPagos = full.TotalPagos;
                                    return (TotalPagos == undefined || TotalPagos == null || TotalPagos == 0) ? ' ' : TotalPagos.toFixed(2);
                                }
                            },
                            {
                                "sName": "SaldoFavor", "mData": "SaldoFavor",
                                "sClass": "alignRight",
                                "render": function (Data, type, full, meta) {
                                    debugger
                                    var SaldoFavor = full.SaldoFavor;
                                    return (SaldoFavor == undefined || SaldoFavor == null || SaldoFavor == 0) ? ' ' : SaldoFavor.toFixed(2);
                                }
                            }
                        ],
                        "fnRowCallback": function (row, data, index) {
                            debugger
                            if (data.Id == 1) {
                                debugger
                                //$("#tbCtsContables tr:eq(" + index + ") td").addClass("tdClassTot");
                               $(row).addClass('BorderRows');
                                //$(row).attr('style', 'border-top:solid 3px white');
                            }
                        },
                        "drawCallback": function (settings) {
                            objVtaSemanal.isOkUpdate = false;
                            //Realizar merge
                            //$("#tbVtSemanal td:first-child").addClass('rowspanClass');

                            debugger
                            var table = $('#tbVtSemanal').dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                                $("#tbCtsContables td:first-child").removeClass('rowspanClass');
                            } else {

                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                                $("#tbVtSemanal td:nth-child(1)").addClass("ColC1");
                                $("#tbVtSemanal td:nth-child(2)").addClass("ColC1");
                                $("#tbVtSemanal td:nth-child(3)").addClass("ColC1");

                                $("#tbVtSemanal td:nth-child(4)").addClass("ColC2");
                                $("#tbVtSemanal td:nth-child(5)").addClass("ColC2");
                                $("#tbVtSemanal td:nth-child(6)").addClass("ColC2");


                                $("#tbVtSemanal td:nth-child(7)").addClass("ColC3");
                                $("#tbVtSemanal td:nth-child(8)").addClass("ColC3");
                                $("#tbVtSemanal td:nth-child(9)").addClass("ColC3");
                            }
                            objVtaSemanal.grid.MergeGridCells("Promotor");
                            objVtaSemanal.grid.MergeGridCells("DniRuc");
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                MergeGridCells: function (clasS) {
                    var topMatchTd;
                    var previousValue = "";
                    var rowSpan = 1;
                    $('#tbVtSemanal .' + clasS).each(function () {
                        if ($(this).text() == previousValue) {
                            rowSpan++;
                            $(topMatchTd).attr('rowspan', rowSpan);

                            $(this).remove();
                        }
                        else {
                            topMatchTd = $(this);
                            rowSpan = 1;
                        }
                        previousValue = $(this).text();
                    });
                },
                cargaTabla: function () {
                    debugger
                    waitingDialog.show("Espere por favor...")
                    $('#tbVtSemanal').DataTable().ajax.reload(function () {
                        waitingDialog.hide();
                    });
                }
            },
            generaal: {
                Validar : function(){
                    debugger;
                    if (objVtaSemanal.FechaInicio == undefined || objVtaSemanal.FechaInicio == null || objVtaSemanal.FechaInicio.length == 0 || objVtaSemanal.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objVtaSemanal.FechaFin == undefined || objVtaSemanal.FechaFin == null || objVtaSemanal.FechaFin.length == 0 || objVtaSemanal.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    debugger
                    if (objVtaSemanal.generaal.Validar()) {
                        objVtaSemanal.grid.cargaTabla();
                    }
                },
                exportar: function () {
                    debugger
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntVentaSemanal)); }();
                    _Ent.FechaInicio = objVtaSemanal.FechaInicio;
                    _Ent.FechaFin = objVtaSemanal.FechaFin;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_ListaVentaSemanal_excel", "Financiera")',
                        data: { _Ent: _Ent },
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListaVentaSemanalExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al consultar.", "Alerta");
                        }
                    });
                }
            }
        };

        $(document).ready(function () {
           objVtaSemanal.Inicio();
        });
    </script>
}