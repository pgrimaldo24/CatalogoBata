@model CapaPresentacion.Models.Lista_Cuenta_ContablesViewModel

@{
    ViewBag.Title = "Consulta de Liquidacion vs Despacho";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
        vertical-align: middle;
    }

    .alignCenter {
        text-align: center;
        vertical-align: middle;
    }

    .control {
        font-family: arial;
        display: block;
        position: relative;
        padding-left: 28px;
        margin-bottom: 4px;
        padding-top: 2px;
        cursor: pointer;
        font-size: 14px;
    }

        .control input {
            position: absolute;
            z-index: -1;
            opacity: 0;
        }

    .control_indicator {
        position: absolute;
        top: 3px;
        left: 0;
        height: 19px;
        width: 20px;
        background: #e6e6e6;
        border: 1px solid #97a6af;
        border-radius: 4px;
    }

    .control:hover input ~ .control_indicator,
    .control input:focus ~ .control_indicator {
        background: #cccccc;
    }

    .control input:checked ~ .control_indicator {
        background: #156aac;
    }

    .control:hover input:not([disabled]):checked ~ .control_indicator,
    .control input:checked:focus ~ .control_indicator {
        background: #156aac;
    }

    .control input:disabled ~ .control_indicator {
        background: #e6e6e6;
        opacity: 0.6;
        pointer-events: none;
    }

    .control_indicator:after {
        box-sizing: unset;
        content: '';
        position: absolute;
        display: none;
    }

    .control input:checked ~ .control_indicator:after {
        display: block;
    }

    .control-checkbox .control_indicator:after {
        left: 6px;
        top: 2px;
        width: 3px;
        height: 8px;
        border: solid #ffffff;
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
    }

    .control-checkbox input:disabled ~ .control_indicator:after {
        border-color: #7b7b7b;
    }
</style>
<p class="text-primary">Consulte entre un rango de fechas, todos los despachos detallado por articulo.</p>
<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-sm-3">
            <label class="control control-checkbox">
                <input id="chkPSD" type="checkbox" />
                Filtrar pares sin despachar
                <div class="control_indicator"></div>
            </label>
        </div>
        <div class="col-md-3">
        </div>
        <div class="col-md-6">
            <div class="col-md-5" style="padding-right: 0px;">
                <div>
                    <label for="dtpFechaNotaCredito" style="color: #3d566e;">Fecha de Inicio</label>
                    <div id="datepickerIni" class="input-group date" data-date-format="dd/mm/yyyy">
                        <input id="dtpFechaInicio" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                        <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                            <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <label for="dtpFechaNotaCredito" style="color: #3d566e;">Fecha de Cierre</label>
                <div id="datepickerFin" class="input-group date" data-date-format="dd/mm/yyyy">
                    <input id="dtpFechaFin" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                    <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                        <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                    </span>
                </div>
            </div>
            <div class="col-md-2 text-right" style="padding:0px">
                <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary" style="margin-top: 19px;">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">

        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Actualizar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="tbPedDes" class="table table-hover table-bordered compact">
                    <thead>
                        <tr>
                            <th style="text-align: center;">Nro. Pedido</th>
                            <th style="text-align: center;">Nro. Boleta</th>
                            <th style="text-align: center;">Asesor</th>
                            <th style="text-align: center;">Lider</th>
                            <th style="text-align: center;">Promotor</th>
                            <th style="text-align: center;">Fec. Venta</th>
                            <th style="text-align: center;">Articulo </th>
                            <th style="text-align: center;">Talla</th>
                            <th style="text-align: center;">Pares Real</th>
                            <th style="text-align: center;">Pares Desp. </th>
                            <th style="text-align: center;">Pares S/D</th> 
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td colspan='8'>No se encontraron resultados</td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th></th>
                            <th>Totales</th>
                            <th><span class="text-bold alignRight" id="lbltotCantParReal"></span></th>
                            <th><span class="text-bold alignRight" id="lbltotCantParDes"></span></th>
                            <th><span class="text-bold alignRight" id="lbltotCantParSD"></span></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        debugger
        var objPedDes = {
            Inicio: function () {
                debugger
                /*[Inicializamos variables]*/
                $("#datepickerIni").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");
                $("#datepickerFin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");
                this.isOkUpdate = true;
                this.isOkchkPSD = false;
                this.FechaInicio = $("#dtpFechaInicio").val();
                this.FechaFin = $("#dtpFechaFin").val();
                waitingDialog.show("Espere por favor...")
                objPedDes.grid.get();
                /*[/Inicializamos variables]*/
                /*[btn Exportar y buscar]*/
                $("#btnExportar").click(function () {
                    objPedDes.FechaInicio = $("#dtpFechaInicio").val();
                    objPedDes.FechaFin = $("#dtpFechaFin").val();
                    waitingDialog.show("Espere por favor...")
                    objPedDes.generaal.exportar();
                })
                $("#btnBuscar").click(function () {
                    objPedDes.isOkUpdate = true;
                    objPedDes.FechaInicio = $("#dtpFechaInicio").val();
                    objPedDes.FechaFin = $("#dtpFechaFin").val();
                    objPedDes.generaal.consultar();
                })
                /*[btn Exportar y buscar]*/
                /*[Check Filtrar pares sin despachar]*/
                $('#chkPSD').change(function () {
                    objPedDes.isOkUpdate = true;
                    if (this.checked) {
                        $('#chkPSD').attr("checked", "checked");
                        objPedDes.isOkchkPSD = true;
                        objPedDes.FechaInicio = $("#dtpFechaInicio").val();
                        objPedDes.FechaFin = $("#dtpFechaFin").val();
                        objPedDes.generaal.consultar();
                    } else {
                        $('#chkPSD').removeAttr("checked");
                        objPedDes.isOkchkPSD = false;
                        objPedDes.FechaInicio = $("#dtpFechaInicio").val();
                        objPedDes.FechaFin = $("#dtpFechaFin").val();
                        objPedDes.generaal.consultar();
                    }
                });
                /*[/Check Filtrar pares sin despachar]*/
            },
            grid: {
                get: function () {
                    debugger
                    $('#tbPedDes').DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            //debugger
                            $.getJSON(sSource, aoData, function (json) {
                                //debugger
                                $("#lbltotCantParReal").html(objPedDes.generaal.FormatDecimal(json.itotCantParReal,0,'.',','));
                                $("#lbltotCantParDes").html(objPedDes.generaal.FormatDecimal(json.itotCantParDes, 0, '.', ','));
                                $("#lbltotCantParSD").html(objPedDes.generaal.FormatDecimal(json.itotCantParSD, 0, '.', ','));
                                fnCallback(json);
                            });
                        },
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getListaPedDespAjax", "Pedido")',
                        "fnServerParams": function (aoData) {
                            debugger;
                            aoData.push({ "name": "isOkUpdate", "value": objPedDes.isOkUpdate });
                            aoData.push({ "name": "isOkchkPSD", "value": objPedDes.isOkchkPSD });
                            aoData.push({ "name": "FechaInicio", "value": objPedDes.FechaInicio });
                            aoData.push({ "name": "FechaFin", "value": objPedDes.FechaFin });
                        },
                        "bFilter": true,
                        "bdestroy": true,
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [1,2,3,4,5,6,7],
                        }],
                        "bDeferRender": true,
                        "aoColumns": [
                            { "sName": "Liq", "mData": "Liq", "sClass": "alignCenter" },  
                            { "sName": "Ven_Id", "mData": "Ven_Id", "sClass": "alignCenter" },
                            { "sName": "Asesor", "mData": "Asesor", "sClass": "alignCenter" },
                            { "sName": "Lider", "mData": "Lider", "sClass": "alignCenter" },
                            { "sName": "Promotor", "mData": "Promotor", "sClass": "alignCenter" },
                            { "sName": "Fecha", "mData": "Fecha", "sClass": "" },
                            { "sName": "Articulo", "mData": "Articulo", "sClass": "alignCenter" },
                            { "sName": "Talla", "mData": "Talla", "sClass": "alignCenter" },
                            { "sName": "PedOriginal", "mData": "PedOriginal", "sClass": "alignCenter" },
                            { "sName": "Pedi_Despachado", "mData": "Pedi_Despachado", "sClass": "alignCenter" },
                            { "sName": "Saldo", "mData": "Saldo", "sClass": "alignCenter" }
                        ],
                        "fnRowCallback": function (row, data, index) {
                            waitingDialog.hide();
                        },
                        "drawCallback": function (settings) {
                            objPedDes.isOkUpdate = false;
                            var table = $('#tbPedDes').dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                            } else {
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                            }
                            if ($('#chkPSD').is(':checked')) {
                                objPedDes.isOkchkPSD = true;
                            } else {
                                objPedDes.isOkchkPSD = false;
                            }
                            waitingDialog.hide();
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                cargaTabla: function () {
                    debugger
                    waitingDialog.show("Espere por favor...")
                    $('#tbPedDes').DataTable().ajax.reload(function () {
                        waitingDialog.hide();
                    });
                },
            },
            generaal: {
                Validar : function(){
                    debugger;
                    if (objPedDes.FechaInicio == undefined || objPedDes.FechaInicio == null || objPedDes.FechaInicio.length == 0 || objPedDes.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objPedDes.FechaFin == undefined || objPedDes.FechaFin == null || objPedDes.FechaFin.length == 0 || objPedDes.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    debugger
                    if (objPedDes.generaal.Validar()) {
                        objPedDes.grid.cargaTabla();
                    }
                },
                exportar: function () {
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag._Ent_Pedido_Despacho)); }();
                    _Ent.FechaInicio = objPedDes.FechaInicio;
                    _Ent.FechaFin = objPedDes.FechaFin;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_ListaPedDesp_excel", "Pedido")',
                        data : {_Ent:_Ent},
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListaListaPedDespExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al consultar.", "Alerta");
                        }
                    });
                },
                FormatDecimal: function (numero, decimales, separadorDecimal, separadorMiles) {
                    //debugger
                    var partes, array;
                    if (!isFinite(numero) || isNaN(numero = parseFloat(numero))) {
                        return "";
                    }
                    if (typeof decimales === "undefined") {
                        decimales = 2;
                    }
                    if (typeof separadorDecimal === "undefined") {
                        separadorDecimal = ".";
                    }
                    if (typeof separadorMiles === "undefined") {
                        separadorMiles = ",";
                    }
                    // Redondeamos
                    if (!isNaN(parseInt(decimales))) {
                        if (decimales >= 0) {
                            numero = numero.toFixed(decimales);
                        } else {
                            numero = (
                                Math.round(numero / Math.pow(10, Math.abs(decimales))) * Math.pow(10, Math.abs(decimales))
                            ).toFixed();
                        }
                    } else {
                        numero = numero.toString();
                    }
                    // Damos formato
                    partes = numero.split(".", 2);
                    array = partes[0].split("");
                    for (var i = array.length - 3; i > 0 && array[i - 1] !== "-"; i -= 3) {
                        array.splice(i, 0, separadorMiles);
                    }
                    numero = array.join("");
                    if (partes.length > 1) {
                        numero += separadorDecimal + partes[1];
                    }
                    return numero;
                },
            }
        };
        $(document).ready(function () {
            objPedDes.Inicio();
        });
    </script>
}