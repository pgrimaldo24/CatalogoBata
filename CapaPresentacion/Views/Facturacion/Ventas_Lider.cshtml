@{
    ViewBag.Title = "Consulta de venta por lider.";
    ViewBag.SubTitle = "";
}
<style>
    .table thead {
        background-color: #5799bf;
        color: #fff;
    }

    .boton-xs-td {
        padding-top: 5px !important;
        padding-bottom: 5px !important;
    }

    .alignRight {
        text-align: right;
        vertical-align: middle;
    }

    .alignCenter {
        text-align: center;
        vertical-align: middle;
    }

    .table .ColC1 {
        color: #000 !important;
        background-color: #BCE4FA;        
        font-weight: bold;
        vertical-align: middle;
    }
    .table .ColC2 {
        color: #000 !important;
        background-color: #E2F4FE;        
        font-weight: bold;
        vertical-align: middle;
    }
    
   .table .ColC3 {
        color: #000 !important;
        background-color: #7FCCF4;        
        font-weight: bold;
        vertical-align: middle;

    }
</style>
<p class="text-primary">Consulte entre un rango de fechas, todas las ventas realizadas.</p>
<div class="box box-header box-primary">
    <h3 class="box-title danger" style="color:#9c9c9c;font-weight:bold">Parametro de Busqueda</h3>
    <br />
    <br />
    <div class="row">
        <div class="col-sm-4">

        </div>
        <div class="col-md-2" style="padding-right: 0px;">
            <label for="" style="color: #3d566e;">Lider</label>
            <div class="form-group">
                @Html.DropDownList("ddlCliente", new SelectList(ViewBag.ListarCLiente, "Codigo", "Descripcion"), new { @class = "form-control selectpicker", @data_live_search = "true", @id = "ddlCliente", @name = "ddlCliente", @style = "max-width: 100%" })
            </div>
        </div>
        <div class="col-md-6" style="padding-left: 0px;">
            <div class="col-md-5" style="padding-right: 0px;">
                <div>
                    <label for="lblFechaInicio" style="color: #3d566e;">Fecha de Inicio</label>
                    <div id="datepickerIni" class="input-group date" data-date-format="dd/mm/yyyy">
                        <input id="dtpFechaInicio" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                        <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                            <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <label for="lblFechaFin" style="color: #3d566e;">Fecha de Cierre</label>
                <div id="datepickerFin" class="input-group date" data-date-format="dd/mm/yyyy">
                    <input id="dtpFechaFin" type="text" class="form-control input-sm ui-cell-input" disabled style="max-width: 100%" />
                    <span class="input-group-addon btn btn-xs btn-default" style="padding: 4px 5px;">
                        <i class="glyphicon glyphicon-calendar" height="20" width="20" style="color:#ff9f3f"></i>
                    </span>
                </div>
            </div>
            <div class="col-md-2 text-right" style="padding:0px">
                <button id="btnBuscar" type="submit" title="Consultar" class="btn btn-primary" style="margin-top: 19px;">
                    <span class="glyphicon glyphicon-search"></span>&nbsp;&nbsp;Buscar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="box box-body box-primary">
    <div class="row">
        <div class="col-md-6">
            
        </div>
        <div class="col-md-6 text-right">
            <button id="btnExportar" title="Exportar" class="btn btn-success disabled" disabled>
                <span class="glyphicon glyphicon-export"></span>&nbsp;&nbsp;Exportar Lista
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="TbTabla" class="table table-hover table-bordered compact">
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        debugger
        var objVtassSemanales = {
            Inicio: function () {                
                //debugger
                /*[Inicializamos variables]*/
                this._HtmlTabla = '<thead>' +
                                        '<tr>' +
                                            '<th style="text-align: center;">Año</th>' +
                                        '</tr>' +
                                        '<tr>' +
                                            '<th style="text-align: center;">Mes</th>' +
                                        '</tr>' +
                                        '<tr>' +
                                            '<th style="text-align: center;">Dia</th>' +
                                        '</tr>' +
                                    '</thead>' +
                                    '<tbody>' +
                                        '<tr>' +
                                            '<td colspan="1">No se encontraron resultados</td>' +
                                        '</tr>' +
                                    '</tbody>' +

                $("#TbTabla").html(objVtassSemanales._HtmlTabla);

                $("#datepickerIni").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                $("#datepickerFin").datepicker({
                    autoclose: true,
                    todayHighlight: true
                }).datepicker("setDate", "0");

                //$('#ddlCliente option').attr("selected", "selected");
                //$('#ddlCliente').selectpicker('refresh');
                this.IdCliente = $("#ddlCliente").val();
                this.isOkUpdate = true;
                this.FechaInicio = $("#dtpFechaInicio").val();
                this.FechaFin = $("#dtpFechaFin").val();
                this.Tabla = $('#TbTabla');
                this.Columns = [];
                this.Response = null;
                this.isOkThead = true;
                
                objVtassSemanales.grid.getColum();
                /*[/Inicializamos variables]*/

                /*[btn Exportar y buscar]*/
                $("#btnExportar").click(function () {
                    objVtassSemanales.FechaInicio = $("#dtpFechaInicio").val();
                    objVtassSemanales.FechaFin = $("#dtpFechaFin").val();
                    waitingDialog.show("Espere por favor...");
                    objVtassSemanales.generaal.exportar();
                })
                $("#btnBuscar").click(function () {
                    objVtassSemanales.Tabla.DataTable().destroy();
                    objVtassSemanales.Tabla.empty();
                    objVtassSemanales.FechaInicio = $("#dtpFechaInicio").val();
                    objVtassSemanales.FechaFin = $("#dtpFechaFin").val();
                    objVtassSemanales.IdCliente = $("#ddlCliente").val();
                    waitingDialog.show("Espere por favor...");
                    objVtassSemanales.generaal.consultar();
                })
                /*[btn Exportar y buscar]*/
            },
            grid: {
                getColum: function () {
                    //debugger                    
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntVentasLider)); }();
                    _Ent.FechaInicio = objVtassSemanales.FechaInicio;
                    _Ent.FechaFin = objVtassSemanales.FechaFin;
                    _Ent.Bas_Id = objVtassSemanales.IdCliente;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("getVentasLiderCol", "Facturacion")',
                        data: { _Ent: _Ent },
                        //async: false,
                        success: function (data) {
                            //debugger
                            data = JSON.parse(data);
                            if (data.Success) {
                                $("#TbTabla").html(objVtassSemanales._HtmlTabla);
                                //debugger;
                                objVtassSemanales.Columns = data.Data._List_Ent_Ventas_Lider_Col;
                                //debugger
                                var output = objVtassSemanales.grid.getTableTh(data.Data);
                                $("#TbTabla").html(output)
                                objVtassSemanales.grid.get();
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                                $("#TbTabla").removeAttr("style");
                                waitingDialog.hide();
                            }
                            else {
                                //debugger
                                $("#TbTabla").html(objVtassSemanales._HtmlTabla);
                                $("#TbTabla").attr("style", "width: 400.5px;")
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                                waitingDialog.hide();
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al listar", "Alerta");
                        }
                    });
                },
                get: function () {
                    //debugger
                    objVtassSemanales.Tabla.DataTable({
                        "language": {
                            "url": "../Scripts/DataTables/Spanish.json"
                        },
                        "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                            //debugger
                            oSettings.jqXHR = $.ajax( {
                                "dataType": 'json',
                                "type": "POST",
                                "url": sSource,
                                "data": aoData,
                                "success": function (data) {
                                    var datas = JSON.parse(data.aaData.Data)
                                    var objData = {
                                            aaData : JSON.parse(data.aaData.Data),
                                            sEcho : data.sEcho,
                                            iTotalRecords :data.iTotalRecords,
                                            iTotalDisplayRecords : data.iTotalDisplayRecords
                                        };
                                    fnCallback(objData);
                                },
                                "error": function (e) {
                                    console.log(e.message);
                                }
                            });
                        },
                        "bServerSide": true,
                        "bAutoWidth": false,
                        "sAjaxSource": '@Url.Action("getVentasLiderListarAjax", "Facturacion")',
                        "bFilter": true,
                        "retrieve": false,
                        "destroy": true, //reinializa la tabla
                        "bDeferRender": true,
                        "lengthChange": true, //Lista por cantidad
                        "start": 0,
                        "columnDefs": [{
                            "orderable": false,
                            "targets": [],
                        }],
                        "aoColumns": objVtassSemanales.Columns,
                        "fnRowCallback": function (row, data, index) {
                            debugger
                        },
                        "drawCallback": function (settings) {
                            var table = objVtassSemanales.Tabla.dataTable();
                            var data = table.fnGetData();
                            if (data.length == 0) {
                                $("#btnExportar").addClass("disabled");
                                $("#btnExportar").attr('disabled', 'disabled');
                            } else {
                                $("#btnExportar").removeClass("disabled");
                                $("#btnExportar").removeAttr("disabled");
                            }
                            $("#TbTabla td:nth-child(1)").addClass("ColC1");
                            $("#TbTabla td:nth-child(2)").addClass("ColC1");
                            $("#TbTabla td:nth-child(3)").addClass("ColC1");
                            $("#TbTabla td:nth-child(4)").addClass("ColC1");
                            $("#TbTabla td:nth-child(5)").addClass("ColC1");
                            $("#TbTabla td:nth-child(6)").addClass("ColC1");
                            $("#TbTabla td:nth-child(7)").addClass("ColC1");

                            $("#TbTabla td:nth-child(8)").addClass("ColC1");
                            $("#TbTabla td:nth-child(9)").addClass("ColC1");
                            $("#TbTabla td:nth-child(10)").addClass("ColC1");

                            $("#TbTabla td.Venta_Total").addClass("ColC2");
                            $("#TbTabla td.Venta_Neta").addClass("ColC2");
                            $("#TbTabla td.Total").addClass("ColC3");
                            
                            objVtassSemanales.grid.MergeGridCells("Asesor");
                            objVtassSemanales.grid.MergeGridCells("Lider");
                            waitingDialog.hide();
                        },
                        "initComplete": function (settings, json) {
                        }
                    });
                },
                getTableTh: function (Data) {
                    //debugger
                    var result = "<thead>";
                    result += "<tr><th colspan=10></th>";

                    for (var key in Data.RorwsTh1) {
                        let AnioTH = Data.RorwsTh1[key];
                        result += "<th  style='text-align: center;' colspan=" + AnioTH.substr((AnioTH.indexOf("/") + 1)) + ">" + AnioTH.substr(0, AnioTH.indexOf("/")) + "</th>";
                    }
                    result += "</tr>";
                    result += "<tr><th colspan=10></th>";
                    for (var key in Data.RorwsTh2) {
                        let StrMesTH = Data.RorwsTh2[key];
                        result += "<th  style='text-align: center;' colspan=" + StrMesTH.substr((StrMesTH.lastIndexOf("/") + 1)) + ">" + StrMesTH.substr((StrMesTH.indexOf("/") + 1), (StrMesTH.lastIndexOf("/") - (StrMesTH.indexOf("/") + 1))) + "</th>";
                    }
                    result += "</tr>";

                    result += "</tr>";
                    result += "<tr>";
                    for (var key in Data.RorwsTh3) {
                        let StrSemanaTH = Data.RorwsTh3[key];
                        result += "<th  style='text-align: center;'>" + StrSemanaTH + "</th>";
                    }
                    result += "</tr>";

                    result += "</thead>"
                    return result;
                },
                htmlTable : function(Data){

                },
                /*Merge*/
                MergeGridCells: function (clasS) {
                    var topMatchTd;
                    var previousValue = "";
                    var rowSpan = 1;
                    $('#TbTabla .' + clasS).each(function () {
                        if ($(this).text() == previousValue) {
                            rowSpan++;
                            $(topMatchTd).attr('rowspan', rowSpan);

                            $(this).remove();
                        }
                        else {
                            topMatchTd = $(this);
                            rowSpan = 1;
                        }
                        previousValue = $(this).text();
                    });
                },
                cargaTabla: function () {
                    //debugger
                    waitingDialog.show("Espere por favor...")
                    objVtassSemanales.grid.get();
                    waitingDialog.hide();
                },
            },
            generaal: {
                FormatDecimal: function (numero, decimales, separadorDecimal, separadorMiles) {
                    //debugger
                    var partes, array;
                    if (!isFinite(numero) || isNaN(numero = parseFloat(numero))) {
                        return "";
                    }
                    if (typeof decimales === "undefined") {
                        decimales = 2;
                    }
                    if (typeof separadorDecimal === "undefined") {
                        separadorDecimal = ".";
                    }
                    if (typeof separadorMiles === "undefined") {
                        separadorMiles = ",";
                    }
                    // Redondeamos
                    if (!isNaN(parseInt(decimales))) {
                        if (decimales >= 0) {
                            numero = numero.toFixed(decimales);
                        } else {
                            numero = (
                                Math.round(numero / Math.pow(10, Math.abs(decimales))) * Math.pow(10, Math.abs(decimales))
                            ).toFixed();
                        }
                    } else {
                        numero = numero.toString();
                    }
                    // Damos formato
                    partes = numero.split(".", 2);
                    array = partes[0].split("");
                    for (var i = array.length - 3; i > 0 && array[i - 1] !== "-"; i -= 3) {
                        array.splice(i, 0, separadorMiles);
                    }
                    numero = array.join("");
                    if (partes.length > 1) {
                        numero += separadorDecimal + partes[1];
                    }
                    return numero;
                },
                Validar : function(){
                    //debugger;
                    if (objVtassSemanales.IdCliente == "" || objVtassSemanales.IdCliente == null || objVtassSemanales.IdCliente == 0 || objVtassSemanales.IdCliente == undefined) {
                        objVtassSemanales.IdCliente = "-1";
                    }
                    if (objVtassSemanales.FechaInicio == undefined || objVtassSemanales.FechaInicio == null || objVtassSemanales.FechaInicio.length == 0 || objVtassSemanales.FechaInicio == '') {
                        toastr.error("La fecha de Inicio no puede estar vacio", "Alerta");
                        return false;
                    }
                    if (objVtassSemanales.FechaFin == undefined || objVtassSemanales.FechaFin == null || objVtassSemanales.FechaFin.length == 0 || objVtassSemanales.FechaFin == '') {
                        toastr.error("La fecha de Fin no puede estar vacio", "Alerta");
                        return false;
                    }
                    return true;
                },
                consultar: function () {
                    //debugger     
                    if (objVtassSemanales.generaal.Validar()) {
                        objVtassSemanales.grid.getColum();  
                    }
                },
                exportar: function () {
                    var _Ent = function () { return @Html.Raw(Json.Encode(ViewBag.EntVentasLider)); }();
                    _Ent.FechaInicio = objVtassSemanales.FechaInicio;
                    _Ent.FechaFin = objVtassSemanales.FechaFin;
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("get_exporta_LiderListar_excel", "Facturacion")',
                        data : {_Ent:_Ent},
                        success: function (data) {
                            data = JSON.parse(data);
                            waitingDialog.hide();
                            if (data.Success) {
                                toastr.success(data.Message);
                                window.location = '@Url.Action("ListarVentasLiderExcel")';
                            }
                            else {
                                toastr.error(data.Message, "Alerta");
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            waitingDialog.hide();
                            toastr.error("Error al exportar excel.", "Alerta");
                        }
                    });
                }
            }
        };
        //[Inicializamos]
        $(document).ready(function () {
            $("body").toggleClass('sidebar-collapse');
            objVtassSemanales.Inicio();
        });
        //[/Inicializamos]
    </script>
}